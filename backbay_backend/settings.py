"""
Django settings for backbay_backend project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent
# env = environ.Env()

#READ_DOT_ENV_FILE = env.bool("DJANGO_READ_DOT_ENV_FILE", default=False)
# environ.Env.read_env()


#if READ_DOT_ENV_FILE:
#   env.read_env(str(ROOT_DIR / ".env"))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '5#!&agj5f#15+#1xtx=9==1ftrkei-2@klj_81-o-l-ku)wq3q'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    # 'django_crontab',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'core',
    'coach_dashboard',
    "admin_dashboard",
    'paypal',
    'survey',
    'mathfilters',
    'new_theme',
]

AUTH_USER_MODEL = 'core.User'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'paypal.middleware.MembershipMiddleware',
]

ROOT_URLCONF = 'backbay_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,"templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'core.views.global_settings',
            ],
        },
    },
]

CRONJOBS = [
    ('0 4 * * *', 'core.cron.my_scheduled_job')
]

CACHE_VERSION = 6

TEMPLATE_CONTEXT_PROCESSORS = (
    'app.core.global_settings',
)

WSGI_APPLICATION = 'backbay_backend.wsgi.application'


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'capdb',
        'USER': 'capuser',
        'PASSWORD': 'root',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


################  Email Config ##################

# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_USE_TLS = True
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_PORT = 587,
# EMAIL_HOST_USER = 'prakash@webllisto.com',
# EMAIL_HOST_PASSWORD = 'django@1122334455',

SENDGRID_API_KEY = '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'

EMAIL_HOST = 'smtp.sendgrid.net'
EMAIL_HOST_USER = 'apikey' # this is exactly the value 'apikey'
EMAIL_HOST_PASSWORD = SENDGRID_API_KEY
EMAIL_PORT = 587
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = 'pawanpanwar264@gmail.com'

#SENDGRID_API_KEY = 'SG.pdJ2CU0pSOudA00mmflaDA.lIdt9u4pfiQxofld6zlEtTPRPW0X3tWpPzxdSdVZJRA'
#DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

####################################################


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/New_York' #(to be implement ET)

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

LOGIN_URL='/login/'
STATIC_URL = '/static/'
#STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

STATICFILES_DIRS = [BASE_DIR / "static"]

#Media Setting
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

BASE_DOMAIN = os.getenv("BASE_DOMAIN")

#Media Setting
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

#Pagination number of record per page load
PAGINATED_BY = 10

PDF_PATH = r'/usr/bin/wkhtmltopdf'
# SendGrid API Key
SENDGRID_API_KEY = os.getenv("SENDGRID_API_KEY")


PAYPAL_CLIENT_ID = os.getenv("PAYPAL_CLIENT_ID")
PAYPAL_CLIENT_SECRET = os.getenv("PAYPAL_CLIENT_SECRET")
PAYPAL_SENDBOX = os.getenv("PAYPAL_SENDBOX")

LOG_DIR = os.path.join(BASE_DIR, 'log')
if not os.path.exists(LOG_DIR):
    os.makedirs(LOG_DIR)

print( os.path.abspath(os.path.join(LOG_DIR, "main.log")))
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'standard': {
            'format': "[%(process)d %(thread)d %(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            'datefmt': "%d/%b/%Y %H:%M:%S"
        },
    },
    'handlers': {
        'logfile': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': 'main.log',
            'maxBytes': 20 * 1024 * 1024,
            'backupCount': 5,
            'formatter': 'standard',
        },
        'console': {

            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'standard'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'propagate': True,
            'level': 'INFO',
        },
        'django.db.backends': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
        'main': {
            'handlers': ['console', 'logfile'],
            'level': 'DEBUG',
        },
        'api': {
            'handlers': ['console','logfile'],
            'level': 'DEBUG',
        },
    }
}


try:
    from .local_settings import *
except ImportError:
    # ImportError("local file not configured.")
    pass


STRIPE_PUBLISHABLE_KEY = 'pk_test_51KiyL2SHLeJT2o7WVUiz5M8COik5WLG2gyGRGp5Sm0OMoFyfzxsEDHe6rVTx7Ot0Tdiof67PmfkxTlQ3a4AqIqty00t81nhrWE'
STRIPE_SECRET_KEY = 'sk_test_51KiyL2SHLeJT2o7WxfN1Ry81X62Xw3eEsZjbgQimrdzaW43DgTTRlxWDHWiwAHBt4i9ltV8XRsYulI8Nvk5MEpK9008EsXevx7'
